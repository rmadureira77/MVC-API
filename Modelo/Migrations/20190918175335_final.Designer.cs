// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _01_DAL;

namespace _01DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190918175335_final")]
    partial class final
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_01_DAL.Empregado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeEmpregado");

                    b.Property<int>("NumeroEmpregado");

                    b.Property<string>("UserEmpregado");

                    b.HasKey("Id");

                    b.ToTable("Empregados");
                });

            modelBuilder.Entity("_01_DAL.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<int>("IdEmpregado");

                    b.Property<int>("NumeroFatura");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpregado");

                    b.ToTable("Faturas");
                });

            modelBuilder.Entity("_01_DAL.LinhaDeFatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdFaturas");

                    b.Property<int>("IdProduto");

                    b.Property<float>("PrecoLinha");

                    b.Property<int>("QuantidadeLinha");

                    b.HasKey("Id");

                    b.HasIndex("IdFaturas");

                    b.HasIndex("IdProduto");

                    b.ToTable("LinhasDeFatura");
                });

            modelBuilder.Entity("_01_DAL.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<int?>("EmpregadoId");

                    b.Property<int>("IdEmpregado");

                    b.Property<string>("NomeProduto");

                    b.Property<float>("Preco");

                    b.Property<int>("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("EmpregadoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("_01_DAL.Fatura", b =>
                {
                    b.HasOne("_01_DAL.Empregado", "Empregados")
                        .WithMany("Faturas")
                        .HasForeignKey("IdEmpregado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_01_DAL.LinhaDeFatura", b =>
                {
                    b.HasOne("_01_DAL.Fatura", "Faturas")
                        .WithMany("LinhasDeFatura")
                        .HasForeignKey("IdFaturas")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("_01_DAL.Produto", "Produtos")
                        .WithMany("LinhasDeFatura")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_01_DAL.Produto", b =>
                {
                    b.HasOne("_01_DAL.Empregado", "Empregado")
                        .WithMany("Produtos")
                        .HasForeignKey("EmpregadoId");
                });
#pragma warning restore 612, 618
        }
    }
}
